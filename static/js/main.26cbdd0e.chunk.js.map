{"version":3,"sources":["components/AppBar/app-bar.jsx","DataStore/DataProvider.js","components/Search/search.js","components/Search/search-bar.jsx","components/MovieList/common/movie-card.jsx","components/MovieList/results-list.jsx","components/MovieList/nomination-list.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["AppBar","id","Context","createContext","useDataProvider","useContext","children","useState","nominations","setNominations","searchResults","setSearchResults","search","setSearch","useEffect","savedState","localStorage","getItem","console","log","JSON","parse","setItem","stringify","store","searchStore","nominationStore","Provider","value","APIKEY","requestSearch","a","axios","get","movies","SearchBar","textFieldValue","setTextFieldValue","handleTextFieldChange","useCallback","handleSearch","filteredResults","data","Search","filter","movie","Type","setResults","textField","TextField","onChange","prefix","Icon","source","SearchMinor","color","placeholder","helpText","className","onKeyDown","event","keyCode","preventDefault","MovieList","props","button","Title","Year","Poster","Card","src","alt","ResultsList","results","isNominated","movieId","find","imdbID","action","Button","disabled","primary","onClick","nominateMovie","Page","title","separator","map","isBannerDismissed","setBanner","length","destructive","newNominationList","removeNomination","Banner","status","onDismiss","imdbDI","App","DataProvider","AppProvider","i18n","en","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26cbdd0e.chunk.js","sourcesContent":["import React from 'react';\nimport \"./app-bar.css\";\n\nexport default function AppBar() {\n\n  return (\n    <div id=\"app-bar\">\n      <h1>\n        <b>The Shoppies</b>\n      </h1>\n    </div>\n  );\n}\n","import React, { createContext, useContext, useState, useEffect } from 'react';\nconst Context = createContext();\n\nexport const useDataProvider = () => useContext(Context);\n\nexport default ({ children }) => {\n  const [nominations, setNominations] = useState([]);\n  const [searchResults, setSearchResults] = useState([]);\n  const [search, setSearch] = useState(\"\");\n\n  useEffect(() => {\n    const savedState = localStorage.getItem('saveState');\n    console.log(savedState);\n    if(savedState){setNominations(JSON.parse(savedState))};\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('saveState', JSON.stringify(nominations));\n  }, [nominations]);\n\n  const store = {\n    searchStore: {\n      \"search\": search,\n      \"setSearch\": setSearch,\n      \"results\": searchResults,\n      \"setResults\": setSearchResults\n    },\n    nominationStore: {\n      \"nominations\": nominations,\n      \"setNominations\" : setNominations\n    }\n  }\n\n\n  return (\n    <Context.Provider value={store}>\n      {children}\n    </Context.Provider>\n  );\n}","import axios from \"axios\";\n\nconst APIKEY = \"1ae68295\";\n\nexport default async function requestSearch(search) {\n  try{\n    const movies = await axios.get(`https://www.omdbapi.com/?s=${search}&apikey=${APIKEY}`);\n    return movies;\n  }catch(e){\n    console.log(\"error retreiving info \", e);\n  }\n}","import React, {useCallback, useState} from 'react';\nimport {useDataProvider} from 'DataStore/DataProvider';\nimport {Icon, TextField, Button} from '@shopify/polaris';\nimport {SearchMinor} from '@shopify/polaris-icons';\nimport search from './search';\n\nimport \"./search-bar.css\";\n\nexport default function SearchBar() {\n\n  const { searchStore } = useDataProvider();\n\n  const [textFieldValue, setTextFieldValue] = useState('');\n\n  const handleTextFieldChange = useCallback(\n    (value) => {\n      setTextFieldValue(value)\n    },\n    [],\n  );\n\n  const handleKeyPress = (event) => {\n    const enterKeyPressed = event.keyCode === 13;\n    if (enterKeyPressed) {\n      event.preventDefault(); \n      handleSearch();\n    }\n  }\n\n  const handleSearch = async () => {\n    const searchResults = await search(textFieldValue);\n\n    const filteredResults = searchResults.data.Search.filter((movie) => movie.Type === \"movie\");\n\n    searchStore.setSearch(textFieldValue);\n    searchStore.setResults(filteredResults);\n  }\n\n\n  const textField = (\n    <TextField\n      onChange={handleTextFieldChange}\n      value={textFieldValue}\n      prefix={<Icon source={SearchMinor} color=\"inkLighter\" />}\n      placeholder=\"Search\"\n      helpText=\"Type in a movie and click enter to search\"\n    />\n  );\n\n  return (\n    <div className=\"search\">\n      <div className=\"search-bar\" onKeyDown={handleKeyPress}>\n        <h1 className=\"search-title\">Search for and Nominate your favorite movies!</h1>\n        {textField}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport {Card} from '@shopify/polaris';\nimport \"./movie-card.css\";\n\nexport default function MovieList(props) {\n  const {movie, button} = props\n  const {Title, Year, Poster} = movie;\n\n  return (\n    <Card>\n      <div className=\"card-content\">\n        <div className=\"card-image\">\n          <img src={Poster} alt=\"Movie Poster\"/>\n        </div>\n        <div className=\"card-text\">\n          <h1 className=\"card-title\">{Title}</h1>\n          <p>{Year}</p>\n        </div>\n        {button}\n      </div>\n    </Card>\n  );\n}\n","import React from 'react';\nimport {Page, Button} from '@shopify/polaris';\nimport {useDataProvider} from 'DataStore/DataProvider';\nimport MovieCard from \"./common/movie-card\";\n\n\nexport default function ResultsList() {\n\n  const { searchStore, nominationStore } = useDataProvider();\n  const { search, results } = searchStore;\n  const { nominations, setNominations } = nominationStore;\n\n  const nominateMovie = (movie) => {\n    setNominations([...nominations, movie])\n  }\n\n  const isNominated = (movieId) => {\n    const findMovie = nominations.find((movie) => movie.imdbID == movieId);\n\n    return findMovie;\n  }\n\n  const action = (movieId, movie) => <Button disabled={isNominated(movieId)} primary onClick={() => nominateMovie(movie)}>Nominate</Button>;\n\n  return(\n    <div className=\"movie-list\">\n      <Page title={`Results for \"${search}\"`} separator>\n        {results &&\n          results.map((movie)=> {\n            return(\n              <MovieCard key={movie.imdbID} movie={movie} button={action(movie.imdbID, movie)}></MovieCard>\n            );\n          })\n        }\n      </Page>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\nimport {Page, Button, Banner} from '@shopify/polaris';\nimport {useDataProvider} from 'DataStore/DataProvider';\nimport MovieCard from \"./common/movie-card\";\nimport \"./nomination-list.css\";\n\nexport default function ResultsList() {\n  const { nominationStore } = useDataProvider();\n  const { nominations, setNominations } = nominationStore;\n\n  const [isBannerDismissed, setBanner] = useState(false);\n\n  useEffect(() => {\n    if(isBannerDismissed && nominations.length < 5){\n      setBanner(false);\n    }\n  }, [nominations]);\n\n  const removeNomination = (movieId) => {\n    const newNominationList = nominations.filter((movie) => !(movie.imdbID === movieId));\n\n    setNominations([...newNominationList]);\n  }\n\n  const action = (movieId) => <Button destructive onClick={() => removeNomination(movieId)}>Remove</Button>;\n\n  return(\n    <div className=\"movie-list\">\n      <Page title=\"Your Nominations\" separator>\n          {!isBannerDismissed && nominations.length > 4 &&\n          <div className=\"nomination-banner\">\n            <Banner\n              title=\"You have Five Movies Nominated!\"\n              status=\"success\"\n              onDismiss={() => {setBanner(true)}}\n            />\n          </div>\n          }\n          {nominations &&\n            nominations.map((movie)=> {\n              return(\n                <MovieCard key={movie.imdbDI} movie={movie} button={action(movie.imdbID)}></MovieCard>\n              );\n            })\n          }\n      </Page>\n    </div>\n  );\n}\n","import {AppProvider} from \"@shopify/polaris\";\nimport en from '@shopify/polaris/locales/en.json';\nimport AppBar from 'components/AppBar/app-bar';\nimport SearchBar from 'components/Search/search-bar';\nimport ResultsList from 'components/MovieList/results-list';\nimport NominationList from 'components/MovieList/nomination-list'\n\nimport DataProvider from 'DataStore/DataProvider';\n\nimport \"@shopify/polaris/dist/styles.css\";\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <DataProvider>\n      <AppProvider i18n={en}>\n        <div className=\"App\">\n          <AppBar></AppBar>\n          <div className=\"app-body\">\n            <SearchBar></SearchBar>\n            <ResultsList></ResultsList>\n            <NominationList></NominationList>\n          </div>\n        </div>\n      </AppProvider>\n    </DataProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}